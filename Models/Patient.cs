//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FIT5032_EasyX.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Patient : AspNetUsers
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Patient()
        {
            this.Bookings = new HashSet<Bookings>();
        }

        public Patient(AspNetUsers aspNetUsers, Patient patient)
        {
            foreach (var prop in aspNetUsers.GetType().GetProperties())
            {
                this.GetType().GetProperty(prop.Name).SetValue(this, prop.GetValue(aspNetUsers, null), null);
            }
            this.Title = patient.Title;
            this.First_Name = patient.First_Name;
            this.Last_Name = patient.Last_Name;
            this.Date_Of_Birth = patient.Date_Of_Birth;
            this.Address = patient.Address;
            this.Bookings = new HashSet<Bookings>();
        }
        [Required(ErrorMessage = "Title cannot be empty.")]

        public string Title { get; set; }
        [Required(ErrorMessage = "First Name cannot be empty.")]
        [Display(Name = "First Name")]
        public string First_Name { get; set; }
        [Required(ErrorMessage = "Last Name cannot be empty.")]
        [Display(Name = "Last Name")]
        public string Last_Name { get; set; }

        [DataType(DataType.Date)]
        [Range(typeof(DateTime), "1/1/1900", "1/1/2023", ErrorMessage = "Value for {0} must be between {1} and {2}")]
        [Display(Name = "Date of Birth")]

        public string Date_Of_Birth { get; set; }
        [Required(ErrorMessage = "Address cannot be empty.")]

        public string Address { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Bookings> Bookings { get; set; }
    }
}


//namespace FIT5032_EasyX.Models
//{
//    using System;
//    using System.Collections.Generic;
//    using System.ComponentModel.DataAnnotations;

//    public partial class Patient
//    {
//        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
//        public Patient()
//        {
//            this.Bookings = new HashSet<Bookings>();
//        }

//        //public Patient(AspNetUsers aspNetUsers, Patient patient)
//        //{
//        //    foreach (var prop in aspNetUsers.GetType().GetProperties())
//        //    {
//        //        this.GetType().GetProperty(prop.Name).SetValue(this, prop.GetValue(aspNetUsers, null), null);
//        //    }
//        //    this.Title = patient.Title;
//        //    this.First_Name = patient.First_Name;
//        //    this.Last_Name = patient.Last_Name;
//        //    this.Date_Of_Birth = patient.Date_Of_Birth;
//        //    this.Address = patient.Address;
//        //    this.Bookings = new HashSet<Bookings>();
//        //}
//        public string Id { get; set; }
//        public string Title { get; set; }
//        public string First_Name { get; set; }
//        public string Last_Name { get; set; }

//        [DataType(DataType.Date)]
//        public string Date_Of_Birth { get; set; }
//        public string Address { get; set; }

//        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
//        public virtual ICollection<Bookings> Bookings { get; set; }
//    }
//}